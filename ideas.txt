DB structure:

class // Every class (e.q. b-itb4-1c) gets their own row here
  id int, auto increment
  name string // b-itb4-1c
  icsid int // Id needed to fetch the schedule, 14327
  schedlastfetched int // UnixTime of when this class' schedule was fetched/updated.

student
  id int, auto increment
  name string // Voornaam
  rfid varchar(255) // Not sure what length it is going to be. 
  cid int // ClassId
  created int(6) // YearWeek of when student got created (added to current class). (e.q. 201513, 20151)
  //telaatpas bool

schedule_item // Every schedule/rooster item gets a new row in here. Old ones are kept. 
  id int, auto increment
  cid int // Class ID
  start int // Amount of seconds since start of the day when the item starts. 
  end int // See above (but now for the end of the item)
  created int // UnixTime when this item for created 
  usestopped int // UnixTime when this item has become deprecated. (items that are currently used have got a value of 0 for this)
  description string // ned,daa,prg, etc
  facility string // 6.55
  staff string // lam

class_item // Every class with 'aanwezigen' gets a row. 
  id int, auto increment
  siid int // ScheduleItem id
  cid int // Class Id
  max_students int
  yearweek int(6) // Example: 201512, 20151

attendee_item // Every person attending every class will get a new row here.
  id int, auto increment
  ciid int // Class Item ID
  sid int // Student ID
  mins_early int // Amount of minutes that the student was early. When student is too late it will become a negative int. 

client
  id int, auto increment
  secret varchar(64) // SHA256, kind of like a password and login in once
  facility string

users
  id int, auto increment
  login varchar(16)
  password varchar(64) // SHA256

Errors given from /checkin :
  1: Student not found
  2: Too long till next class
  3: Student is already attending his/her current (or next < 15 minutes) class.
  4: No class for today anymore (schedule item not found) *
  5: Student tries to check into the wrong class 
      (studentâ€™s class is in BA6.43, but he/she tries to check into BA6.49 for example)
  * Also given from /nextclass

To do:
+Correct order of attendees/students in att.FetchAll
+Change class id to correct ICS id, our 'own' class id is pretty much pointless.
+Change updatesched to get the data from own Xedule API.
 Start and End timestamps in database are now proper UnixTime, instead of amount of seconds from start of the day.
